"""
The @defer directive may be specified on a fragment spread to imply de-prioritization, that causes the fragment to be omitted in the initial response, and delivered as a subsequent response afterward. A query with @defer directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred delivered in a subsequent response. @include and @skip take precedence over @defer.
"""
directive @defer(
  if: Boolean = true
  label: String
) on FRAGMENT_SPREAD | INLINE_FRAGMENT

type HistoricKlineData {
  opentime: Int!
  coins: [OHLC!]!
}

type HistoricPrices {
  Pair: [Pair!]
  Timestamp: Int!
}

type Mutation {
  """
  Creates an array of Historic Price pairs
  """
  createHistoricPrices(input: NewHistoricPriceInput): [HistoricPrices!]!

  """
  Creates an array of Historic Kline Data
  """
  createHistoricKline(input: NewHistoricKlineDataInput): [HistoricKlineData!]!

  """
  Deletes all prices data for the matching given timestamp
  """
  deleteHistoricPrices(Timestamp: Int!): Boolean!
}

input NewHistoricKlineDataInput {
  Opentime: Int!
  Coins: [OHLCInput!]!
}

input NewHistoricPriceInput {
  pairs: [PairInput!]!
  Timestamp: Int!
}

type OHLC {
  OpenPrice: String!
  HighPrice: String!
  LowPrice: String!
  ClosePrice: String!
  TradeVolume: String!
  Symbol: String!
}

input OHLCInput {
  OpenPrice: String!
  HighPrice: String!
  LowPrice: String!
  ClosePrice: String!
  TradeVolume: String!
  Symbol: String!
}

type Pair {
  Symbol: String!
  Price: String!
}

input PairInput {
  Symbol: String!
  Price: String!
}

type Query {
  """
  Fetches price data for a given symbol up to a given limit of records
  """
  getHistoricPrice(symbol: String!, limit: Int): [HistoricPrices!]!

  """
  Gets all prices data at a given timestamp
  """
  getHistoricPricesAtTimestamp(Timestamp: Int!): [HistoricPrices!]!

  """
  Fetches kline data data for a given symbol up to a given limit of records
  """
  getHistoricKlineData(symbol: String!, limit: Int): [HistoricKlineData!]!

  """
  Returns a count of timestamps in the DB
  """
  getUniqueTimestampCount: Int!
}

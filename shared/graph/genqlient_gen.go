// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graph

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreateHistoricPricesCreateHistoricPrices includes the requested fields of the GraphQL type HistoricPrices.
type CreateHistoricPricesCreateHistoricPrices struct {
	Pair []CreateHistoricPricesCreateHistoricPricesPair `json:"Pair"`
}

// GetPair returns CreateHistoricPricesCreateHistoricPrices.Pair, and is useful for accessing the field via an interface.
func (v *CreateHistoricPricesCreateHistoricPrices) GetPair() []CreateHistoricPricesCreateHistoricPricesPair {
	return v.Pair
}

// CreateHistoricPricesCreateHistoricPricesPair includes the requested fields of the GraphQL type Pair.
type CreateHistoricPricesCreateHistoricPricesPair struct {
	Symbol string `json:"Symbol"`
	Price  string `json:"Price"`
}

// GetSymbol returns CreateHistoricPricesCreateHistoricPricesPair.Symbol, and is useful for accessing the field via an interface.
func (v *CreateHistoricPricesCreateHistoricPricesPair) GetSymbol() string { return v.Symbol }

// GetPrice returns CreateHistoricPricesCreateHistoricPricesPair.Price, and is useful for accessing the field via an interface.
func (v *CreateHistoricPricesCreateHistoricPricesPair) GetPrice() string { return v.Price }

// CreateHistoricPricesResponse is returned by CreateHistoricPrices on success.
type CreateHistoricPricesResponse struct {
	// Creates an array of Historic Price pairs
	CreateHistoricPrices []CreateHistoricPricesCreateHistoricPrices `json:"createHistoricPrices"`
}

// GetCreateHistoricPrices returns CreateHistoricPricesResponse.CreateHistoricPrices, and is useful for accessing the field via an interface.
func (v *CreateHistoricPricesResponse) GetCreateHistoricPrices() []CreateHistoricPricesCreateHistoricPrices {
	return v.CreateHistoricPrices
}

type NewHistoricPriceInput struct {
	Pairs     []PairInput `json:"pairs"`
	Timestamp int         `json:"Timestamp"`
}

// GetPairs returns NewHistoricPriceInput.Pairs, and is useful for accessing the field via an interface.
func (v *NewHistoricPriceInput) GetPairs() []PairInput { return v.Pairs }

// GetTimestamp returns NewHistoricPriceInput.Timestamp, and is useful for accessing the field via an interface.
func (v *NewHistoricPriceInput) GetTimestamp() int { return v.Timestamp }

type PairInput struct {
	Symbol string `json:"Symbol"`
	Price  string `json:"Price"`
}

// GetSymbol returns PairInput.Symbol, and is useful for accessing the field via an interface.
func (v *PairInput) GetSymbol() string { return v.Symbol }

// GetPrice returns PairInput.Price, and is useful for accessing the field via an interface.
func (v *PairInput) GetPrice() string { return v.Price }

// __CreateHistoricPricesInput is used internally by genqlient
type __CreateHistoricPricesInput struct {
	Input NewHistoricPriceInput `json:"input"`
}

// GetInput returns __CreateHistoricPricesInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateHistoricPricesInput) GetInput() NewHistoricPriceInput { return v.Input }

// The query or mutation executed by CreateHistoricPrices.
const CreateHistoricPrices_Operation = `
mutation CreateHistoricPrices ($input: NewHistoricPriceInput!) {
	createHistoricPrices(input: $input) {
		Pair {
			Symbol
			Price
		}
	}
}
`

func CreateHistoricPrices(
	ctx_ context.Context,
	client_ graphql.Client,
	input NewHistoricPriceInput,
) (*CreateHistoricPricesResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateHistoricPrices",
		Query:  CreateHistoricPrices_Operation,
		Variables: &__CreateHistoricPricesInput{
			Input: input,
		},
	}
	var err_ error

	var data_ CreateHistoricPricesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

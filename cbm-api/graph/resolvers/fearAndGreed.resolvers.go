package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"

	"cryptobotmanager.com/cbm-backend/cbm-api/graph/model"
)

// UpsertFearAndGreedIndex is the resolver for the upsertFearAndGreedIndex field.
func (r *mutationResolver) UpsertFearAndGreedIndex(ctx context.Context, input model.UpsertFearAndGreedIndexInput) (*model.FearAndGreedIndex, error) {
	return db.UpsertFearAndGreedIndex(ctx, input)
}

// DeleteFearAndGreedIndex is the resolver for the deleteFearAndGreedIndex field.
func (r *mutationResolver) DeleteFearAndGreedIndex(ctx context.Context, timestamp int) (bool, error) {
	return db.DeleteFearAndGreedIndex(ctx, timestamp)
}

// ReadFearAndGreedIndex is the resolver for the readFearAndGreedIndex field.
func (r *queryResolver) ReadFearAndGreedIndex(ctx context.Context, limit *int) ([]*model.FearAndGreedIndex, error) {
	return db.ReadFearAndGreedIndex(ctx, limit)
}

// ReadFearAndGreedIndexAtTimestamp is the resolver for the readFearAndGreedIndexAtTimestamp field.
func (r *queryResolver) ReadFearAndGreedIndexAtTimestamp(ctx context.Context, timestamp int) (*model.FearAndGreedIndex, error) {
	return db.ReadFearAndGreedIndexAtTimestamp(ctx, timestamp)
}

// ReadFearAndGreedIndexCount is the resolver for the readFearAndGreedIndexCount field.
func (r *queryResolver) ReadFearAndGreedIndexCount(ctx context.Context) (int, error) {
	return db.ReadFearAndGreedIndexCount(ctx)
}

// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type ActivityReport struct {
	ID             string   `json:"_id"`
	Timestamp      int      `json:"Timestamp"`
	Qty            int      `json:"Qty"`
	AvgGain        float64  `json:"AvgGain"`
	TopAGain       *float64 `json:"TopAGain,omitempty"`
	TopBGain       *float64 `json:"TopBGain,omitempty"`
	TopCGain       *float64 `json:"TopCGain,omitempty"`
	FearGreedIndex int      `json:"FearGreedIndex"`
}

type CreateTaskInput struct {
	Title       string  `json:"title"`
	Description *string `json:"description,omitempty"`
	Status      *string `json:"status,omitempty"`
	Priority    *string `json:"priority,omitempty"`
	AssignedTo  *string `json:"assignedTo,omitempty"`
	DueDate     *string `json:"dueDate,omitempty"`
	Category    *string `json:"category,omitempty"`
}

type CreateUserInput struct {
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Contact   string `json:"contact"`
	Address1  string `json:"address1"`
	Address2  string `json:"address2"`
	Role      string `json:"role"`
}

type HistoricKlineData struct {
	Opentime int     `json:"opentime"`
	Coins    []*Ohlc `json:"coins"`
}

type HistoricPrices struct {
	Pair      []*Pair `json:"Pair,omitempty"`
	Timestamp int     `json:"Timestamp"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Token string `json:"token"`
	User  *User  `json:"user"`
}

type MarkAsTestedInput struct {
	BotInstanceName string `json:"BotInstanceName"`
	Tested          bool   `json:"Tested"`
}

type Mutation struct {
}

type NewActivityReport struct {
	Timestamp      int      `json:"Timestamp"`
	Qty            int      `json:"Qty"`
	AvgGain        float64  `json:"AvgGain"`
	TopAGain       *float64 `json:"TopAGain,omitempty"`
	TopBGain       *float64 `json:"TopBGain,omitempty"`
	TopCGain       *float64 `json:"TopCGain,omitempty"`
	FearGreedIndex int      `json:"FearGreedIndex"`
}

type NewHistoricKlineDataInput struct {
	Opentime int          `json:"Opentime"`
	Coins    []*OHLCInput `json:"Coins"`
}

type NewHistoricPriceInput struct {
	Pairs     []*PairInput `json:"Pairs"`
	Timestamp int          `json:"Timestamp"`
}

type NewTradeOutcomeReport struct {
	Timestamp        int      `json:"Timestamp"`
	BotName          string   `json:"BotName"`
	PercentageChange float64  `json:"PercentageChange"`
	Balance          float64  `json:"Balance"`
	Symbol           string   `json:"Symbol"`
	Outcome          string   `json:"Outcome"`
	Fee              *float64 `json:"Fee,omitempty"`
	ElapsedTime      int      `json:"ElapsedTime"`
	Volume           float64  `json:"Volume"`
	FearGreedIndex   int      `json:"FearGreedIndex"`
	MarketStatus     string   `json:"MarketStatus"`
}

type Ohlc struct {
	OpenPrice   string `json:"OpenPrice"`
	HighPrice   string `json:"HighPrice"`
	LowPrice    string `json:"LowPrice"`
	ClosePrice  string `json:"ClosePrice"`
	TradeVolume string `json:"TradeVolume"`
	Symbol      string `json:"Symbol"`
}

type OHLCInput struct {
	OpenPrice   string `json:"OpenPrice"`
	HighPrice   string `json:"HighPrice"`
	LowPrice    string `json:"LowPrice"`
	ClosePrice  string `json:"ClosePrice"`
	TradeVolume string `json:"TradeVolume"`
	Symbol      string `json:"Symbol"`
}

type Pair struct {
	Symbol string `json:"Symbol"`
	Price  string `json:"Price"`
}

type PairInput struct {
	Symbol string `json:"Symbol"`
	Price  string `json:"Price"`
}

type Query struct {
}

type Strategy struct {
	BotInstanceName      string   `json:"BotInstanceName"`
	TradeDuration        int      `json:"TradeDuration"`
	IncrementsAtr        int      `json:"IncrementsATR"`
	LongSMADuration      int      `json:"LongSMADuration"`
	ShortSMADuration     int      `json:"ShortSMADuration"`
	WINCounter           *int     `json:"WINCounter,omitempty"`
	LOSSCounter          *int     `json:"LOSSCounter,omitempty"`
	TIMEOUTGainCounter   *int     `json:"TIMEOUTGainCounter,omitempty"`
	TIMEOUTLossCounter   *int     `json:"TIMEOUTLossCounter,omitempty"`
	NetGainCounter       *int     `json:"NetGainCounter,omitempty"`
	NetLossCounter       *int     `json:"NetLossCounter,omitempty"`
	AccountBalance       float64  `json:"AccountBalance"`
	MovingAveMomentum    float64  `json:"MovingAveMomentum"`
	TakeProfitPercentage *float64 `json:"TakeProfitPercentage,omitempty"`
	StopLossPercentage   *float64 `json:"StopLossPercentage,omitempty"`
	ATRtollerance        *float64 `json:"ATRtollerance,omitempty"`
	FeesTotal            *float64 `json:"FeesTotal,omitempty"`
	Tested               *bool    `json:"Tested,omitempty"`
	Owner                *string  `json:"Owner,omitempty"`
	CreatedOn            int      `json:"CreatedOn"`
}

type StrategyInput struct {
	BotInstanceName      string   `json:"BotInstanceName"`
	TradeDuration        int      `json:"TradeDuration"`
	IncrementsAtr        int      `json:"IncrementsATR"`
	LongSMADuration      int      `json:"LongSMADuration"`
	ShortSMADuration     int      `json:"ShortSMADuration"`
	WINCounter           *int     `json:"WINCounter,omitempty"`
	LOSSCounter          *int     `json:"LOSSCounter,omitempty"`
	TIMEOUTGainCounter   *int     `json:"TIMEOUTGainCounter,omitempty"`
	TIMEOUTLossCounter   *int     `json:"TIMEOUTLossCounter,omitempty"`
	NetGainCounter       *int     `json:"NetGainCounter,omitempty"`
	NetLossCounter       *int     `json:"NetLossCounter,omitempty"`
	AccountBalance       float64  `json:"AccountBalance"`
	MovingAveMomentum    float64  `json:"MovingAveMomentum"`
	TakeProfitPercentage float64  `json:"TakeProfitPercentage"`
	StopLossPercentage   float64  `json:"StopLossPercentage"`
	ATRtollerance        *float64 `json:"ATRtollerance,omitempty"`
	FeesTotal            *float64 `json:"FeesTotal,omitempty"`
	Tested               *bool    `json:"Tested,omitempty"`
	Owner                string   `json:"Owner"`
	CreatedOn            int      `json:"CreatedOn"`
}

type Task struct {
	ID          string  `json:"id"`
	Title       string  `json:"title"`
	Description *string `json:"description,omitempty"`
	Status      string  `json:"status"`
	Priority    *string `json:"priority,omitempty"`
	AssignedTo  *string `json:"assignedTo,omitempty"`
	DueDate     *string `json:"dueDate,omitempty"`
	Category    *string `json:"category,omitempty"`
	CreatedAt   *string `json:"createdAt,omitempty"`
	UpdatedAt   *string `json:"updatedAt,omitempty"`
}

type TradeOutcomeReport struct {
	ID               string   `json:"_id"`
	Timestamp        int      `json:"Timestamp"`
	BotName          string   `json:"BotName"`
	PercentageChange float64  `json:"PercentageChange"`
	Balance          float64  `json:"Balance"`
	Symbol           string   `json:"Symbol"`
	Outcome          string   `json:"Outcome"`
	Fee              *float64 `json:"Fee,omitempty"`
	ElapsedTime      int      `json:"ElapsedTime"`
	Volume           float64  `json:"Volume"`
	FearGreedIndex   int      `json:"FearGreedIndex"`
	MarketStatus     string   `json:"MarketStatus"`
}

type UpdateCountersInput struct {
	BotInstanceName    string   `json:"BotInstanceName"`
	WINCounter         *bool    `json:"WINCounter,omitempty"`
	LOSSCounter        *bool    `json:"LOSSCounter,omitempty"`
	TIMEOUTGainCounter *bool    `json:"TIMEOUTGainCounter,omitempty"`
	TIMEOUTLossCounter *bool    `json:"TIMEOUTLossCounter,omitempty"`
	NetGainCounter     *bool    `json:"NetGainCounter,omitempty"`
	NetLossCounter     *bool    `json:"NetLossCounter,omitempty"`
	AccountBalance     float64  `json:"AccountBalance"`
	FeesTotal          *float64 `json:"FeesTotal,omitempty"`
}

type UpdateTaskInput struct {
	ID          string  `json:"id"`
	Title       *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	Status      *string `json:"status,omitempty"`
	Priority    *string `json:"priority,omitempty"`
	AssignedTo  *string `json:"assignedTo,omitempty"`
	DueDate     *string `json:"dueDate,omitempty"`
	Category    *string `json:"category,omitempty"`
}

type User struct {
	ID        string `json:"id"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Contact   string `json:"contact"`
	Address1  string `json:"address1"`
	Address2  string `json:"address2"`
	Role      string `json:"role"`
}
